<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>设置MySQL的隔离级别</title>
    <link href="/2021/08/25/%E8%AE%BE%E7%BD%AEMySQL%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/"/>
    <url>/2021/08/25/%E8%AE%BE%E7%BD%AEMySQL%E7%9A%84%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB/</url>
    
    <content type="html"><![CDATA[<h2 id="怎么查当前的隔离级别？"><a href="#怎么查当前的隔离级别？" class="headerlink" title="怎么查当前的隔离级别？"></a>怎么查当前的隔离级别？</h2><p class="note note-success">MySQL数据库默认的存储引擎是支持事务的innodb,所以自然的就有默认的隔离级别--可重复读</p><p class="note note-warning">只有支持ACID的存储引擎才有对应的各种隔离级别</p><p>在我们设置当前事务的隔离级别的时候我们首先要会查询我们的MMySQL的隔离级别是什么</p><p>MySQL查询隔离级别的语句是：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mysql&gt; select @@global.tx_isolation,@@tx_isolation;<br>+-----------------------+-----------------+<br>| @@global.tx_isolation | @@tx_isolation  |<br>+-----------------------+-----------------+<br>| REPEATABLE-READ       | REPEATABLE-READ |<br>+-----------------------+-----------------+<br>1 row <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.00 sec)<br></code></pre></div></td></tr></table></figure><h2 id="如何设置自己的隔离级别？"><a href="#如何设置自己的隔离级别？" class="headerlink" title="如何设置自己的隔离级别？"></a>如何设置自己的隔离级别？</h2><p>设置innodb的事务级别方法是：</p><p>set 作用域 transaction isolation level 事务隔离级别，例如~</p><blockquote><p>SET [SESSION | GLOBAL] TRANSACTION ISOLATION LEVEL {READ UNCOMMITTED | READ COMMITTED | REPEATABLE READ | SERIALIZABLE}</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">// 全局的<br>mysql&gt; <span class="hljs-built_in">set</span> global transaction isolation level <span class="hljs-built_in">read</span> committed;<br>// 当前会话<br>mysql&gt; <span class="hljs-built_in">set</span> session transaction isolation level <span class="hljs-built_in">read</span> committed;<br></code></pre></div></td></tr></table></figure><h2 id="各个隔离级别都是啥意思？"><a href="#各个隔离级别都是啥意思？" class="headerlink" title="各个隔离级别都是啥意思？"></a>各个隔离级别都是啥意思？</h2><p>SQL标准定义了4类隔离级别，包括了一些具体规则，用来限定事务内外的哪些改变是可见的，哪些是不可见的。低级别的隔离级一般支持更高的并发处理，并拥有更低的系统开销。</p><p>但是读提交和串行化一般很少使用</p><ul><li><p><strong>Read Uncommitted（读取未提交内容）</strong><br>在该隔离级别，所有事务都可以看到其他未提交事务的执行结果。本隔离级别很少用于实际应用，因为它的性能也不比其他级别好多少。读取未提交的数据，也被称之为脏读（Dirty Read）。</p></li><li><p><strong>Read Committed（读取提交内容）</strong><br>这是大多数数据库系统的默认隔离级别（但不是MySQL默认的）。它满足了隔离的简单定义：一个事务只能看见已经提交事务所做的改变。这种隔离级别 也支持所谓的不可重复读（Nonrepeatable Read），因为同一事务的其他实例在该实例处理其间可能会有新的commit，所以同一select可能返回不同结果。</p></li><li><p><strong>Repeatable Read（可重读）</strong><br>这是MySQL的默认事务隔离级别，它确保同一事务的多个实例在并发读取数据时，会看到同样的数据行。不过理论上，这会导致另一个棘手的问题：幻读 （Phantom Read）。简单的说，幻读指当用户读取某一范围的数据行时，另一个事务又在该范围内插入了新行，当用户再读取该范围的数据行时，会发现有新的“幻影” 行。InnoDB和Falcon存储引擎通过多版本并发控制（MVCC，Multiversion Concurrency Control）机制解决了该问题。</p></li><li><p><strong>Serializable（可串行化）</strong><br>这是最高的隔离级别，它通过强制事务排序，使之不可能相互冲突，从而解决幻读问题。简言之，它是在每个读的数据行上加上共享锁。在这个级别，可能导致大量的超时现象和锁竞争。</p></li></ul><h2 id="脏读、不可重复读、幻读"><a href="#脏读、不可重复读、幻读" class="headerlink" title="脏读、不可重复读、幻读"></a>脏读、不可重复读、幻读</h2><ol><li>脏读 ：脏读就是指当一个事务正在访问数据，并且对数据进行了修改，而这种修改还没有提交到数据库中，这时，另外一个事务也访问 这个数据，然后使用了这个数据。</li><li>不可重复读 ：是指在一个事务内，多次读同一数据。在这个事务还没有结束时，另外一个事务也访问该同一数据。那么，在第一个事务中的两 次读数据之间，由于第二个事务的修改，那么第一个事务两次读到的的数据可能是不一样的。这样就发生了在一个事务内两次读到的数据是不一样的，因此称为是不 可重复读。例如，一个编辑人员两次读取同一文档，但在两次读取之间，作者重写了该文档。当编辑人员第二次读取文档时，文档已更改。原始读取不可重复。如果 只有在作者全部完成编写后编辑人员才可以读取文档，则可以避免该问题。</li><li>幻读 : 是指当事务不是独立执行时发生的一种现象，例如第一个事务对一个表中的数据进行了修改，这种修改涉及到表中的全部数据行。 同时，第二个事务也修改这个表中的数据，这种修改是向表中插入一行新数据。那么，以后就会发生操作第一个事务的用户发现表中还有没有修改的数据行，就好象 发生了幻觉一样。例如，一个编辑人员更改作者提交的文档，但当生产部门将其更改内容合并到该文档的主复本时，发现作者已将未编辑的新材料添加到该文档中。 如果在编辑人员和生产部门完成对原始文档的处理之前，任何人都不能将新材料添加到文档中，则可以避免该问题。</li></ol><p class="note note-primary">看起来不可重复读和幻读都是在当前事务读取的时候有别的事务读取了数据，但是不可重复读修改的是原来就有的数据，而幻读是新增了一个原先不存在的数据</p><h2 id="不同隔离级别对应可能出现问题"><a href="#不同隔离级别对应可能出现问题" class="headerlink" title="不同隔离级别对应可能出现问题"></a>不同隔离级别对应可能出现问题</h2><table><thead><tr><th>隔离级别</th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>Read Uncommitted</td><td>- [x]</td><td>- [x]</td><td>- [x]</td></tr><tr><td>Read Committed</td><td>- [ ]</td><td>- [x]</td><td>- [x]</td></tr><tr><td>Repeatable Read</td><td>- [ ]</td><td>- [ ]</td><td>- [x]</td></tr><tr><td>Serializable</td><td>- [ ]</td><td>- [ ]</td><td>- [ ]</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker-compose搭建MySql主从和双主</title>
    <link href="/2021/08/23/docker-compose%E6%90%AD%E5%BB%BAMySql%E4%B8%BB%E4%BB%8E%E5%92%8C%E5%8F%8C%E4%B8%BB/"/>
    <url>/2021/08/23/docker-compose%E6%90%AD%E5%BB%BAMySql%E4%B8%BB%E4%BB%8E%E5%92%8C%E5%8F%8C%E4%B8%BB/</url>
    
    <content type="html"><![CDATA[<p class="note note-primary">相信mysql的binlog都不陌生</br>binlog的主要作用就是进行数据同步，今天我们从数据同步的角度搭一下mysql的主从/双主。</p><h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p>以下基于mysql5.7</p><h2 id="简单了解下binlog"><a href="#简单了解下binlog" class="headerlink" title="简单了解下binlog"></a>简单了解下binlog</h2><ul><li><p>binlog是记录所有数据库表结构变更（例如CREATE、ALTER TABLE…）以及表数据修改（INSERT、UPDATE、DELETE…）的二进制日志。</p></li><li><p>binlog日志包括两类文件：二进制日志索引文件（文件名后缀为.index）用于记录所有的二进制文件，二进制日志文件（文件名后缀为.00000*）记录数据库所有的DDL和DML(除了数据查询语句)语句事件。</p></li><li><p>binlog有三种格式：statement基于sql语句复制、row基于行数据变更的复制、mixed混合前两种格式的复制。</p></li></ul><h2 id="搭建主从结构"><a href="#搭建主从结构" class="headerlink" title="搭建主从结构"></a>搭建主从结构</h2><p><img src="/img/mysql/mysql-m-s.png" alt="mysql主从架构"></p><h3 id="创建docker-compose"><a href="#创建docker-compose" class="headerlink" title="创建docker-compose"></a>创建docker-compose</h3><figure class="highlight yml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mysql-master:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql-master</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.31</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">13306</span><span class="hljs-string">:3306</span> <br>    <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># 这个只对mysql主从进行验证 没有持久化配置以及日志相关的映射</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">$PWD/master/conf/my.cnf:/etc/mysql/my.cnf</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-attr">command:</span> [<br>        <span class="hljs-string">&#x27;--character-set-server=utf8mb4&#x27;</span>,<br>        <span class="hljs-string">&#x27;--collation-server=utf8mb4_general_ci&#x27;</span>,<br>        <span class="hljs-string">&#x27;--max_connections=3000&#x27;</span><br>    ]<br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">myweb</span><br>      <br>  <span class="hljs-attr">mysql-slave:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql-slave</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.31</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">23306</span><span class="hljs-string">:3306</span> <br>    <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># 这个只对mysql主从进行验证 没有持久化配置以及日志相关的映射</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">$PWD/slave/conf/my.cnf:/etc/mysql/my.cnf</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-attr">command:</span> [<br>        <span class="hljs-string">&#x27;--character-set-server=utf8mb4&#x27;</span>,<br>        <span class="hljs-string">&#x27;--collation-server=utf8mb4_general_ci&#x27;</span>,<br>        <span class="hljs-string">&#x27;--max_connections=3000&#x27;</span><br>    ]<br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">myweb</span>    <br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">myweb:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br></code></pre></div></td></tr></table></figure><h3 id="创建配置文件"><a href="#创建配置文件" class="headerlink" title="创建配置文件"></a>创建配置文件</h3><h4 id="配置文件目录结构"><a href="#配置文件目录结构" class="headerlink" title="配置文件目录结构"></a>配置文件目录结构</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[root@xxx MySQLM-S]<span class="hljs-comment"># tree</span><br>.<br>├── docker-compose.yaml<br>├── master<br>│   └── conf<br>│       └── my.cnf<br>└── slave<br>    └── conf<br>        └── my.cnf<br></code></pre></div></td></tr></table></figure><h4 id="master-conf-my-cnf-配置文件"><a href="#master-conf-my-cnf-配置文件" class="headerlink" title="master/conf/my.cnf 配置文件"></a>master/conf/my.cnf 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[mysqld]<br><span class="hljs-comment"># [必须]服务器唯一ID，默认是1，一般取IP最后一段</span><br>server-id=1<br><br><br><span class="hljs-comment"># ###################################################</span><br><span class="hljs-comment"># 如果当前实例既做主库又做从库次选线必须开启</span><br><span class="hljs-comment"># log-slave-updates = true </span><br><br><span class="hljs-comment"># 自增长ID</span><br><span class="hljs-comment"># 特殊说明 当该实例为双主的架构时要特殊配置 以避免自增id冲突的问题</span><br><span class="hljs-comment"># auto_increment_offset = 1</span><br><span class="hljs-comment"># auto_increment_increment = 2  </span><br><span class="hljs-comment"># ####################################################</span><br><br><br><span class="hljs-comment"># [必须]启用二进制日志</span><br>log-bin=mysql-bin <br><br><span class="hljs-comment"># 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span><br>binlog-ignore-db=mysql<br><br><span class="hljs-comment"># 确保binlog日志写入后与硬盘同步</span><br>sync_binlog = 1<br><br><span class="hljs-comment"># 设置需要同步的数据库 binlog_do_db = 数据库名； </span><br><span class="hljs-comment"># 如果是多个同步库，就以此格式另写几行即可。</span><br><span class="hljs-comment"># 如果不指明对某个具体库同步，表示同步所有库。除了binlog-ignore-db设置的忽略的库</span><br><span class="hljs-comment"># binlog_do_db = test #需要同步test数据库。</span><br><br><span class="hljs-comment"># 设置需要同步的数据库，主服务器上不限定数据库，在从服务器上限定replicate-do-db = 数据库名；</span><br><span class="hljs-comment"># 如果不指明同步哪些库，就去掉这行，表示所有库的同步（除了ignore忽略的库）。</span><br><span class="hljs-comment"># replicate-do-db = test；</span><br><br><span class="hljs-comment"># 跳过所有的错误，继续执行复制操作</span><br>slave-skip-errors = all  <br></code></pre></div></td></tr></table></figure><h4 id="slave-conf-my-cnf-配置文件"><a href="#slave-conf-my-cnf-配置文件" class="headerlink" title="slave/conf/my.cnf 配置文件"></a>slave/conf/my.cnf 配置文件</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[mysqld]<br><span class="hljs-comment"># [必须]服务器唯一ID，默认是1，一般取IP最后一段  </span><br>server-id=2<br><br><br><span class="hljs-comment"># ###################################################</span><br><span class="hljs-comment"># 如果当前实例既做主库又做从库次选线必须开启</span><br><span class="hljs-comment"># log-slave-updates = true </span><br><br><span class="hljs-comment"># 自增长ID</span><br><span class="hljs-comment"># 特殊说明 当该实例为双主的架构时要特殊配置 以避免自增id冲突的问题</span><br><span class="hljs-comment"># auto_increment_offset = 2</span><br><span class="hljs-comment"># auto_increment_increment = 2  </span><br><span class="hljs-comment"># ####################################################</span><br><br><span class="hljs-comment"># [必须]启用二进制日志</span><br>log-bin=mysql-bin <br><br><span class="hljs-comment"># 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span><br>binlog-ignore-db=mysql<br><br><span class="hljs-comment"># 确保binlog日志写入后与硬盘同步</span><br><span class="hljs-comment"># sync_binlog = 1</span><br><br><span class="hljs-comment"># 设置需要同步的数据库 binlog_do_db = 数据库名； </span><br><span class="hljs-comment"># 如果是多个同步库，就以此格式另写几行即可。</span><br><span class="hljs-comment"># 如果不指明对某个具体库同步，表示同步所有库。除了binlog-ignore-db设置的忽略的库</span><br><span class="hljs-comment"># binlog_do_db = test #需要同步test数据库。</span><br><br><span class="hljs-comment"># 设置需要同步的数据库，主服务器上不限定数据库，在从服务器上限定replicate-do-db = 数据库名；</span><br><span class="hljs-comment"># 如果不指明同步哪些库，就去掉这行，表示所有库的同步（除了ignore忽略的库）。</span><br><span class="hljs-comment"># replicate-do-db = test；</span><br><br><span class="hljs-comment"># 跳过所有的错误，继续执行复制操作</span><br>slave-skip-errors = all <br></code></pre></div></td></tr></table></figure><h3 id="启动docker-compose并配置主从关系"><a href="#启动docker-compose并配置主从关系" class="headerlink" title="启动docker-compose并配置主从关系"></a>启动docker-compose并配置主从关系</h3><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose up -d <br></code></pre></div></td></tr></table></figure><h4 id="进入master配置同步账号和权限"><a href="#进入master配置同步账号和权限" class="headerlink" title="进入master配置同步账号和权限"></a>进入master配置同步账号和权限</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">exec</span> mysql-slave bash<br><br>mysql -uroot -p123455<br><br><span class="hljs-comment"># 查看配置的服务ID</span><br>mysql&gt; show variables like <span class="hljs-string">&#x27;%server_id%&#x27;</span>;<br>+----------------+-------+<br>| Variable_name  | Value |<br>+----------------+-------+<br>| server_id      | 1     |<br>| server_id_bits | 32    |<br>+----------------+-------+<br><br><span class="hljs-comment"># 看master信息 File 和 Position 从服务上要用</span><br>mysql&gt; show master status;<br>+------------------+----------+--------------+------------------+-------------------+<br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br>+------------------+----------+--------------+------------------+-------------------+<br>| mysql-bin.000004 |      154 |              | mysql            |                   |<br>+------------------+----------+--------------+------------------+-------------------+<br><br><span class="hljs-comment"># 创建同步账户并开启权限</span><br>mysql&gt; grant replication slave,replication client on *.* to <span class="hljs-string">&#x27;slave&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified by <span class="hljs-string">&quot;123456&quot;</span>;<br>mysql&gt; flush privileges;<br></code></pre></div></td></tr></table></figure><h4 id="进入slave服务配置"><a href="#进入slave服务配置" class="headerlink" title="进入slave服务配置"></a>进入slave服务配置</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">exec</span> docker-slave bash<br><br>mysql -uroot -p123456<br><br><span class="hljs-comment">#查看server_id是否生效</span><br>mysql&gt; show variables like <span class="hljs-string">&#x27;%server_id%&#x27;</span>;<br>+----------------+-------+<br>| Variable_name  | Value |<br>+----------------+-------+<br>| server_id      | 2     |<br>| server_id_bits | 32    |<br>+----------------+-------+<br><br><span class="hljs-comment"># 连接主mysql服务 master_log_file 和 master_log_pos的值要填写主master里查出来的值 注意这里使用的docker-compose 内部服务的端口和ip</span><br>mysql&gt; change master to master_host=<span class="hljs-string">&#x27;mysql-master&#x27;</span>,master_user=<span class="hljs-string">&#x27;slave&#x27;</span>,master_password=<span class="hljs-string">&#x27;123456&#x27;</span>,master_port=3306,master_log_file=<span class="hljs-string">&#x27;mysql-bin.000004&#x27;</span>, master_log_pos=154,master_connect_retry=30;<br><br><br><span class="hljs-comment"># 开启slave</span><br><br>mysql&gt; start slave;<br><br>mysql&gt; show slave status \G<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master to send event<br>                  Master_Host: mysql-master<br>                  Master_User: slave<br>                  Master_Port: 3306<br>                Connect_Retry: 30<br>              Master_Log_File: mysql-bin.000004<br>          Read_Master_Log_Pos: 778<br>               Relay_Log_File: af5556aff9be-relay-bin.000002<br>                Relay_Log_Pos: 944<br>        Relay_Master_Log_File: mysql-bin.000004<br>             Slave_IO_Running: Yes<br>            Slave_SQL_Running: Yes<br>              Replicate_Do_DB: <br>          Replicate_Ignore_DB: mysql<br>           Replicate_Do_Table: <br>       Replicate_Ignore_Table: <br>      Replicate_Wild_Do_Table: <br>  Replicate_Wild_Ignore_Table: <br>                   Last_Errno: 0<br>                   Last_Error: <br>                 Skip_Counter: 0<br>          Exec_Master_Log_Pos: 778<br>              Relay_Log_Space: 1158<br>              Until_Condition: None<br>               Until_Log_File: <br>                Until_Log_Pos: 0<br>           Master_SSL_Allowed: No<br>           Master_SSL_CA_File: <br>           Master_SSL_CA_Path: <br>              Master_SSL_Cert: <br>            Master_SSL_Cipher: <br>               Master_SSL_Key: <br>        Seconds_Behind_Master: 0<br>Master_SSL_Verify_Server_Cert: No<br>                Last_IO_Errno: 0<br>                Last_IO_Error: <br>               Last_SQL_Errno: 0<br>               Last_SQL_Error: <br>  Replicate_Ignore_Server_Ids: <br>             Master_Server_Id: 1<br>                  Master_UUID: 466c4a60-03f4-11ec-a1a1-0242ac160002<br>             Master_Info_File: /var/lib/mysql/master.info<br>                    SQL_Delay: 0<br>          SQL_Remaining_Delay: NULL<br>      Slave_SQL_Running_State: Slave has <span class="hljs-built_in">read</span> all relay <span class="hljs-built_in">log</span>; waiting <span class="hljs-keyword">for</span> more updates<br>           Master_Retry_Count: 86400<br>                  Master_Bind: <br>      Last_IO_Error_Timestamp: <br>     Last_SQL_Error_Timestamp: <br>               Master_SSL_Crl: <br>           Master_SSL_Crlpath: <br>           Retrieved_Gtid_Set: <br>            Executed_Gtid_Set: <br>                Auto_Position: 0<br>         Replicate_Rewrite_DB: <br>                 Channel_Name: <br>           Master_TLS_Version: <br><br></code></pre></div></td></tr></table></figure><p class="note note-success"> 上面看到 Slave_IO_Running: Yes，Slave_SQL_Running: Yes 表示已经成功开启主从</p><p>连接主mysql参数说明：</p><p><strong>master_port</strong>：Master的端口号，指的是容器的端口号</p><p><strong>master_user</strong>：用于数据同步的用户</p><p><strong>master_password</strong>：用于同步的用户的密码</p><p><strong>master_log_file</strong>：指定 Slave 从哪个日志文件开始复制数据，即上文中提到的 File 字段的值</p><p><strong>master_log_pos</strong>：从哪个 Position 开始读，即上文中提到的 Position 字段的值</p><p><strong>master_connect_retry</strong>：如果连接失败，重试的时间间隔，单位是秒，默认是60秒</p><h2 id="搭建双主结构"><a href="#搭建双主结构" class="headerlink" title="搭建双主结构"></a>搭建双主结构</h2><p>通过上面主从结构我们可以我们可以大胆设想，要是两个数据库的实例都配置对方为master不就实现的双主么？事实却是如此：</p><p>双主结构只需要将双方的配置文件注释掉的地方取消注释掉分别在两台服务器上创同步账号和配置</p><h3 id="创建docker-compose文件（双主）"><a href="#创建docker-compose文件（双主）" class="headerlink" title="创建docker-compose文件（双主）"></a>创建docker-compose文件（双主）</h3><p>这里只更改了docker-compose中服务的名称</p><figure class="highlight yaml"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs yaml"><span class="hljs-attr">version:</span> <span class="hljs-string">&#x27;3.8&#x27;</span><br><span class="hljs-attr">services:</span><br>  <span class="hljs-attr">mysql-m1:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql-m1</span><br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.31</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">13306</span><span class="hljs-string">:3306</span> <br>    <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># 这个只对mysql主从进行验证 没有持久化配置以及日志相关的映射</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">$PWD/m1/conf/my.cnf:/etc/mysql/my.cnf</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-attr">command:</span> [<br>        <span class="hljs-string">&#x27;--character-set-server=utf8mb4&#x27;</span>,<br>        <span class="hljs-string">&#x27;--collation-server=utf8mb4_general_ci&#x27;</span>,<br>        <span class="hljs-string">&#x27;--max_connections=3000&#x27;</span><br>    ]<br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">myweb</span><br>      <br>  <span class="hljs-attr">mysql-m2:</span><br>    <span class="hljs-attr">container_name:</span> <span class="hljs-string">mysql-m2</span> <br>    <span class="hljs-attr">image:</span> <span class="hljs-string">mysql:5.7.31</span><br>    <span class="hljs-attr">restart:</span> <span class="hljs-string">always</span><br>    <span class="hljs-attr">ports:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-number">23306</span><span class="hljs-string">:3306</span> <br>    <span class="hljs-attr">privileged:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">volumes:</span><br>      <span class="hljs-comment"># 这个只对mysql主从进行验证 没有持久化配置以及日志相关的映射</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">$PWD/m2/conf/my.cnf:/etc/mysql/my.cnf</span><br>    <span class="hljs-attr">environment:</span><br>      <span class="hljs-attr">MYSQL_ROOT_PASSWORD:</span> <span class="hljs-string">&quot;123456&quot;</span><br>    <span class="hljs-attr">command:</span> [<br>        <span class="hljs-string">&#x27;--character-set-server=utf8mb4&#x27;</span>,<br>        <span class="hljs-string">&#x27;--collation-server=utf8mb4_general_ci&#x27;</span>,<br>        <span class="hljs-string">&#x27;--max_connections=3000&#x27;</span><br>    ]<br>    <span class="hljs-attr">networks:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">myweb</span>    <br><br><span class="hljs-attr">networks:</span><br>  <span class="hljs-attr">myweb:</span><br>    <span class="hljs-attr">driver:</span> <span class="hljs-string">bridge</span><br></code></pre></div></td></tr></table></figure><h3 id="创建配置文件-双主"><a href="#创建配置文件-双主" class="headerlink" title="创建配置文件(双主)"></a>创建配置文件(双主)</h3><p>这里只是将主从中的配置中注释掉的服务添加上</p><h4 id="配置文件目录结构（双主）"><a href="#配置文件目录结构（双主）" class="headerlink" title="配置文件目录结构（双主）"></a>配置文件目录结构（双主）</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[root@xxx MySQLM-M]<span class="hljs-comment"># tree</span><br>.<br>├── docker-compose.yaml<br>├── m1<br>│   └── conf<br>│       └── my.cnf<br>└── m2<br>    └── conf<br>        └── my.cnf<br></code></pre></div></td></tr></table></figure><h4 id="m1-conf-my-cnf"><a href="#m1-conf-my-cnf" class="headerlink" title="m1/conf/my.cnf"></a>m1/conf/my.cnf</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[mysqld]<br><span class="hljs-comment"># [必须]服务器唯一ID，默认是1，一般取IP最后一段</span><br>server-id=1<br><br><br><span class="hljs-comment"># ###################################################</span><br><span class="hljs-comment"># 如果当前实例既做主库又做从库次选线必须开启</span><br>log-slave-updates = <span class="hljs-literal">true</span> <br><br><span class="hljs-comment"># 自增长ID</span><br><span class="hljs-comment"># 特殊说明 当该实例为双主的架构时要特殊配置 以避免自增id冲突的问题</span><br>auto_increment_offset = 1<br>auto_increment_increment = 2  <br><span class="hljs-comment"># ####################################################</span><br><br><br><span class="hljs-comment"># [必须]启用二进制日志</span><br>log-bin=mysql-bin <br><br><span class="hljs-comment"># 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span><br>binlog-ignore-db=mysql<br><br><span class="hljs-comment"># 确保binlog日志写入后与硬盘同步</span><br>sync_binlog = 1<br><br><span class="hljs-comment"># 设置需要同步的数据库 binlog_do_db = 数据库名； </span><br><span class="hljs-comment"># 如果是多个同步库，就以此格式另写几行即可。</span><br><span class="hljs-comment"># 如果不指明对某个具体库同步，表示同步所有库。除了binlog-ignore-db设置的忽略的库</span><br><span class="hljs-comment"># binlog_do_db = test #需要同步test数据库。</span><br><br><span class="hljs-comment"># 设置需要同步的数据库，主服务器上不限定数据库，在从服务器上限定replicate-do-db = 数据库名；</span><br><span class="hljs-comment"># 如果不指明同步哪些库，就去掉这行，表示所有库的同步（除了ignore忽略的库）。</span><br><span class="hljs-comment"># replicate-do-db = test；</span><br><br><span class="hljs-comment"># 跳过所有的错误，继续执行复制操作</span><br>slave-skip-errors = all  <br></code></pre></div></td></tr></table></figure><h4 id="m2-conf-my-cnf"><a href="#m2-conf-my-cnf" class="headerlink" title="m2/conf/my.cnf"></a>m2/conf/my.cnf</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">[mysqld]<br><span class="hljs-comment"># [必须]服务器唯一ID，默认是1，一般取IP最后一段  </span><br>server-id=2<br><br><br><span class="hljs-comment"># ###################################################</span><br><span class="hljs-comment"># 如果当前实例既做主库又做从库次选线必须开启</span><br>log-slave-updates = <span class="hljs-literal">true</span> <br><br><span class="hljs-comment"># 自增长ID</span><br><span class="hljs-comment"># 特殊说明 当该实例为双主的架构时要特殊配置 以避免自增id冲突的问题</span><br>auto_increment_offset = 2<br>auto_increment_increment = 2  <br><span class="hljs-comment"># ####################################################</span><br><br><span class="hljs-comment"># [必须]启用二进制日志</span><br>log-bin=mysql-bin <br><br><span class="hljs-comment"># 复制过滤：也就是指定哪个数据库不用同步（mysql库一般不同步）</span><br>binlog-ignore-db=mysql<br><br><span class="hljs-comment"># 确保binlog日志写入后与硬盘同步</span><br>sync_binlog = 1<br><br><span class="hljs-comment"># 设置需要同步的数据库 binlog_do_db = 数据库名； </span><br><span class="hljs-comment"># 如果是多个同步库，就以此格式另写几行即可。</span><br><span class="hljs-comment"># 如果不指明对某个具体库同步，表示同步所有库。除了binlog-ignore-db设置的忽略的库</span><br><span class="hljs-comment"># binlog_do_db = test #需要同步test数据库。</span><br><br><span class="hljs-comment"># 设置需要同步的数据库，主服务器上不限定数据库，在从服务器上限定replicate-do-db = 数据库名；</span><br><span class="hljs-comment"># 如果不指明同步哪些库，就去掉这行，表示所有库的同步（除了ignore忽略的库）。</span><br><span class="hljs-comment"># replicate-do-db = test；</span><br><br><span class="hljs-comment"># 跳过所有的错误，继续执行复制操作</span><br>slave-skip-errors = all <br></code></pre></div></td></tr></table></figure><h3 id="启动docker-compose并配置m1和m2的双主"><a href="#启动docker-compose并配置m1和m2的双主" class="headerlink" title="启动docker-compose并配置m1和m2的双主"></a>启动docker-compose并配置m1和m2的双主</h3><h4 id="启动（双主）"><a href="#启动（双主）" class="headerlink" title="启动（双主）"></a>启动（双主）</h4><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose up -d <br></code></pre></div></td></tr></table></figure><p>进入m1和m2下执行下列命令来获取各自的master status 和同步账号</p><p>m1:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">exec</span> mysql-m1 bash<br><br>mysql -uroot -p123456<br><br><span class="hljs-comment"># 查看m1 File和Position</span><br>mysql&gt; show master status;<br>+------------------+----------+--------------+------------------+-------------------+<br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br>+------------------+----------+--------------+------------------+-------------------+<br>| mysql-bin.000005 |      154 |              | mysql            |                   |<br>+------------------+----------+--------------+------------------+-------------------+<br><br><span class="hljs-comment"># 创建同步账号</span><br>mysql&gt; grant replication slave,replication client on *.* to <span class="hljs-string">&#x27;slave&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified by <span class="hljs-string">&quot;123456&quot;</span>;<br>mysql&gt; flush privileges;<br><br></code></pre></div></td></tr></table></figure><p>m2:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">docker-compose <span class="hljs-built_in">exec</span> mysql-m1 bash<br><br>mysql -uroot -p123456<br><br><span class="hljs-comment"># 查看m2 File和Position</span><br>mysql&gt; show master status;<br>+------------------+----------+--------------+------------------+-------------------+<br>| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |<br>+------------------+----------+--------------+------------------+-------------------+<br>| mysql-bin.000005 |      154 |              | mysql            |                   |<br>+------------------+----------+--------------+------------------+-------------------+<br><br><span class="hljs-comment"># 创建同步账号</span><br>mysql&gt; grant replication slave,replication client on *.* to <span class="hljs-string">&#x27;slave&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified by <span class="hljs-string">&quot;123456&quot;</span>;<br>mysql&gt; flush privileges;<br></code></pre></div></td></tr></table></figure><p>m1:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mysql&gt; change master to master_host=<span class="hljs-string">&#x27;mysql-m2&#x27;</span>,master_user=<span class="hljs-string">&#x27;slave&#x27;</span>,master_password=<span class="hljs-string">&#x27;123456&#x27;</span>,master_port=3306,master_log_file=<span class="hljs-string">&#x27;mysql-bin.000005&#x27;</span>, master_log_pos=154,master_connect_retry=30;<br><br>mysql&gt; start slave;<br><br>mysql&gt; show slave status \G<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master to send event<br>                  Master_Host: mysql-m2<br>                  Master_User: slave<br>                  Master_Port: 3306<br>                Connect_Retry: 30<br>              Master_Log_File: mysql-bin.000005<br>          Read_Master_Log_Pos: 620<br>               Relay_Log_File: de7a84f1b7f1-relay-bin.000002<br>                Relay_Log_Pos: 786<br>        Relay_Master_Log_File: mysql-bin.000005<br>             Slave_IO_Running: Yes<br>            Slave_SQL_Running: Yes<br>              Replicate_Do_DB:<br>          Replicate_Ignore_DB:<br>           Replicate_Do_Table:<br>       Replicate_Ignore_Table:<br>      Replicate_Wild_Do_Table:<br>  Replicate_Wild_Ignore_Table:<br>                   Last_Errno: 0<br>                   Last_Error:<br>                 Skip_Counter: 0<br>          Exec_Master_Log_Pos: 620<br>              Relay_Log_Space: 1000<br>              Until_Condition: None<br>               Until_Log_File:<br>                Until_Log_Pos: 0<br>           Master_SSL_Allowed: No<br>           Master_SSL_CA_File:<br>           Master_SSL_CA_Path:<br>              Master_SSL_Cert:<br>            Master_SSL_Cipher:<br>               Master_SSL_Key:<br>        Seconds_Behind_Master: 0<br>Master_SSL_Verify_Server_Cert: No<br>                Last_IO_Errno: 0<br>                Last_IO_Error:<br>               Last_SQL_Errno: 0<br>               Last_SQL_Error:<br>  Replicate_Ignore_Server_Ids:<br>             Master_Server_Id: 2<br>                  Master_UUID: de8af5ce-0410-11ec-ab6d-0242ac170003<br>             Master_Info_File: /var/lib/mysql/master.info<br>                    SQL_Delay: 0<br>          SQL_Remaining_Delay: NULL<br>      Slave_SQL_Running_State: Slave has <span class="hljs-built_in">read</span> all relay <span class="hljs-built_in">log</span>; waiting <span class="hljs-keyword">for</span> more updates<br>           Master_Retry_Count: 86400<br>                  Master_Bind:<br>      Last_IO_Error_Timestamp:<br>     Last_SQL_Error_Timestamp:<br>               Master_SSL_Crl:<br>           Master_SSL_Crlpath:<br>           Retrieved_Gtid_Set:<br>            Executed_Gtid_Set:<br>                Auto_Position: 0<br>         Replicate_Rewrite_DB:<br>                 Channel_Name:<br>           Master_TLS_Version:<br><br></code></pre></div></td></tr></table></figure><p>m2:</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">mysql&gt; change master to master_host=<span class="hljs-string">&#x27;mysql-m1&#x27;</span>,master_user=<span class="hljs-string">&#x27;slave&#x27;</span>,master_password=<span class="hljs-string">&#x27;123456&#x27;</span>,master_port=3306,master_log_file=<span class="hljs-string">&#x27;mysql-bin.000005&#x27;</span>, master_log_pos=154,master_connect_retry=30;<br><br>mysql&gt; start slave;<br><br>mysql&gt; show slave status \G<br>*************************** 1. row ***************************<br>               Slave_IO_State: Waiting <span class="hljs-keyword">for</span> master to send event<br>                  Master_Host: mysql-m1<br>                  Master_User: slave<br>                  Master_Port: 3306<br>                Connect_Retry: 30<br>              Master_Log_File: mysql-bin.000005<br>          Read_Master_Log_Pos: 1086<br>               Relay_Log_File: 65322be4d8a9-relay-bin.000002<br>                Relay_Log_Pos: 786<br>        Relay_Master_Log_File: mysql-bin.000005<br>             Slave_IO_Running: Yes<br>            Slave_SQL_Running: Yes<br>              Replicate_Do_DB:<br>          Replicate_Ignore_DB:<br>           Replicate_Do_Table:<br>       Replicate_Ignore_Table:<br>      Replicate_Wild_Do_Table:<br>  Replicate_Wild_Ignore_Table:<br>                   Last_Errno: 0<br>                   Last_Error:<br>                 Skip_Counter: 0<br>          Exec_Master_Log_Pos: 1086<br>              Relay_Log_Space: 1000<br>              Until_Condition: None<br>               Until_Log_File:<br>                Until_Log_Pos: 0<br>           Master_SSL_Allowed: No<br>           Master_SSL_CA_File:<br>           Master_SSL_CA_Path:<br>              Master_SSL_Cert:<br>            Master_SSL_Cipher:<br>               Master_SSL_Key:<br>        Seconds_Behind_Master: 0<br>Master_SSL_Verify_Server_Cert: No<br>                Last_IO_Errno: 0<br>                Last_IO_Error:<br>               Last_SQL_Errno: 0<br>               Last_SQL_Error:<br>  Replicate_Ignore_Server_Ids:<br>             Master_Server_Id: 1<br>                  Master_UUID: de898a82-0410-11ec-9fee-0242ac170002<br>             Master_Info_File: /var/lib/mysql/master.info<br>                    SQL_Delay: 0<br>          SQL_Remaining_Delay: NULL<br>      Slave_SQL_Running_State: Slave has <span class="hljs-built_in">read</span> all relay <span class="hljs-built_in">log</span>; waiting <span class="hljs-keyword">for</span> more updates<br>           Master_Retry_Count: 86400<br>                  Master_Bind:<br>      Last_IO_Error_Timestamp:<br>     Last_SQL_Error_Timestamp:<br>               Master_SSL_Crl:<br>           Master_SSL_Crlpath:<br>           Retrieved_Gtid_Set:<br>            Executed_Gtid_Set:<br>                Auto_Position: 0<br>         Replicate_Rewrite_DB:<br>                 Channel_Name:<br>           Master_TLS_Version:<br></code></pre></div></td></tr></table></figure><p class="noet note-success">至此双主节点设置完成</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>主从模式多用来进行读写分离</p><p>双主模式多用来进行高可用</p><p>更复杂的部署可能会部署多master和多slave并用keeplive保证统一访问的模式，这里没探究</p>]]></content>
    
    
    <categories>
      
      <category>存储</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>高可用</tag>
      
      <tag>数据同步</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微服务概述</title>
    <link href="/2021/08/18/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E8%BF%B0/"/>
    <url>/2021/08/18/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="微服务起源"><a href="#微服务起源" class="headerlink" title="微服务起源"></a>微服务起源</h2><h3 id="单体应用的缺点"><a href="#单体应用的缺点" class="headerlink" title="单体应用的缺点"></a>单体应用的缺点</h3><ul><li>单体应用复杂</li><li>应用无法拓展</li><li>可靠性低</li><li>敏捷开发和快速部署无法完成</li></ul><p><em><strong>由此产生微服务</strong></em></p><blockquote><p>一切争端的开始</p></blockquote><h3 id="微服务的演变"><a href="#微服务的演变" class="headerlink" title="微服务的演变"></a>微服务的演变</h3><p>微服务本质上是对面向架构的模式(SOA)的一种实践</p><p>微服务的特点:</p><ul><li>小即是美</li><li>单一职责</li><li>尽可能早创建原型</li><li>可以执行比效率更重要</li></ul><h3 id="微服务的定义"><a href="#微服务的定义" class="headerlink" title="微服务的定义"></a>微服务的定义</h3><p>围绕业务功能构建的，服务关注单一业务，服务间采用轻量级的通信机制，可以全自动独立部署，可以使用不同的编程语言和数据存储技术。微服务架构通过业务拆分实现服务组件化，通过组件组合快速开发系统，业务单一的服务组件又可以独立部署，使得整个系统变得清晰灵活</p><p><em><strong>核心： 化繁为简 分而治之</strong></em></p><p>优点：</p><ul><li>原子服务</li><li>独立部署</li><li>隔离部署</li><li>去中心化服务治理</li></ul><p>缺点：</p><ul><li>基础设施建设复杂度高</li><li>分布式服务间通信机制变得复杂 对不可用节点服务处理变得更加复杂</li><li>分布式的分区数据库 对分布式事物等需要做对应的复杂处理</li><li>测试整体的微服务架构复杂</li><li>服务间的依赖 局部升级可能影响整体</li></ul><h2 id="微服务设计思路"><a href="#微服务设计思路" class="headerlink" title="微服务设计思路"></a>微服务设计思路</h2><h3 id="组件服务化"><a href="#组件服务化" class="headerlink" title="组件服务化"></a>组件服务化</h3><ul><li>kit:一个微服务的基础库（框架）</li><li>service: 业务业务代码+kit依赖+第三方组件的依赖</li><li>RPC+message queue: 轻量级通讯</li></ul><h3 id="按业务组织服务"><a href="#按业务组织服务" class="headerlink" title="按业务组织服务"></a>按业务组织服务</h3><p>事实上传统应用设计架构的分层结构正反映了不同角色的沟通结构。所以若要按微服务的方式来构建应用，也需要对应调整团队的组织架构。每个服务背后的小团队的组织是跨功能的，包含实现业务所需的全面的技能</p><h3 id="去中心化"><a href="#去中心化" class="headerlink" title="去中心化"></a>去中心化</h3><ul><li>数据去中心化</li><li>治理去中心化</li><li>技术去中心化</li></ul><h3 id="基础设施自动化"><a href="#基础设施自动化" class="headerlink" title="基础设施自动化"></a>基础设施自动化</h3><ul><li>ci/cd</li><li>auto testing</li><li>在线监控</li></ul><h3 id="服务兼容性设计"><a href="#服务兼容性设计" class="headerlink" title="服务兼容性设计"></a>服务兼容性设计</h3><p>发送时要保守，接收时要开放。按照伯斯塔尔法则的思想来设计和实现服务时，发送的数据要更保守，意味着最小化的传送必要的信息，接收时更开放意味着要最大限度的容忍冗余数据，保证兼容性。</p><ul><li>负载均衡</li><li>超时控制</li><li>负载保护</li><li>隔离</li><li>限流</li><li>降级</li><li>重试</li><li>熔断</li></ul><h2 id="微服务设计"><a href="#微服务设计" class="headerlink" title="微服务设计"></a>微服务设计</h2><h3 id="API-GATEWAY"><a href="#API-GATEWAY" class="headerlink" title="API GATEWAY"></a>API GATEWAY</h3><blockquote><p>backend for forntend BFF 可以认为是一种适配服务，将后端的微服务进行适配（主要包括聚合裁剪和格式适配等逻辑），向无线端设备暴露友好和统一的 API，方便无线设备接入访问后端服务</p></blockquote><h3 id="微服务的划分"><a href="#微服务的划分" class="headerlink" title="微服务的划分"></a>微服务的划分</h3><h3 id="微服务的安全"><a href="#微服务的安全" class="headerlink" title="微服务的安全"></a>微服务的安全</h3><h2 id="服务发现-amp-GRPC"><a href="#服务发现-amp-GRPC" class="headerlink" title="服务发现 &amp; GRPC"></a>服务发现 &amp; GRPC</h2><h3 id="GRPC"><a href="#GRPC" class="headerlink" title="GRPC"></a>GRPC</h3><ul><li>多语言：语言中立，支持多种语言。</li><li>轻量级、高性能：序列化支持 PB（Protocol Buffer）和 JSON，PB 是一种语言无关的高性能序列化框架</li><li>可插拔</li><li>IDL：基于文件定义服务，通过 proto3 工具生成指定语言的数据结构、服务端接口以及客户端 Stub</li><li>移动端：基于标准的 HTTP/2 设计，支持双向流、消息头压缩、单 TCP 的多路复用、服务端推送等特性，这些特性使得 gRPC 在移动端设备上更加省电和节省网络流量。</li><li>服务而非对象 消息而非引用：促进微服务的系统间粗粒度消息交互设计理念</li><li>负载无关的：不同的服务需要使用不同的消息类型和编码，例如 protocol buffers、JSON、XML 和 Thrift。</li><li>流：Streaming API。</li><li>阻塞式和非阻塞式：支持异步和同步处理在客户端和服务端间交互的消息序列。</li><li>元数据交换：常见的横切关注点，如认证或跟踪，依赖数据交换。</li><li>标准化状态码：客户端通常以有限的方式响应 API 调用返回的错误 </li></ul><h3 id="服务发现"><a href="#服务发现" class="headerlink" title="服务发现"></a>服务发现</h3><ul><li><p>客户端发现：<br>直连 比服务端服务发现少一次网络跳转 Consumer 需要内置特定的服务发现客户端和发现逻辑</p></li><li><p>服务端发现：<br>Consumer 无需关注服务发现具体细节 只需知道服务的 DNS 域名即可 支持异构语言开发 需要基础设施支撑 多了一次网络跳转 可能有性能损失</p></li><li><p>服务网格 service mesh:<br>通过sidercar 方式隐式的支持服务发现（待补充）</p></li></ul><h2 id="多集群-amp-多租户"><a href="#多集群-amp-多租户" class="headerlink" title="多集群 &amp; 多租户"></a>多集群 &amp; 多租户</h2><h3 id="多集群"><a href="#多集群" class="headerlink" title="多集群"></a>多集群</h3><p>为了保证服务的可用性 已经对异常情况的预处理 使用多集群的方式提高系统的可用能力</p><h3 id="多租户"><a href="#多租户" class="headerlink" title="多租户"></a>多租户</h3><p>在一个微服务架构中允许多系统共存是利用微服务稳定性以及模块化最有效的方式之一 这种方式一般被称为多租户（multi-tenancy）</p><p>通过不同的租户区分不同的业务功能：</p><ul><li>红蓝发布</li><li>灰度测试</li><li>模块测试</li></ul><blockquote><p>多租户的概念较为模糊<br>思考？ 多租户中是怎样实现在上下文中传递多租户信息的?</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>架构</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ddd</tag>
      
      <tag>微服务</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
